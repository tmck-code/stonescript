var gameEngine = import SS/GameEngine

var PANEL = 0
var BUTTONS = []

var STYLE_LINED_BOX = ui.AddStyle(＂┌─┐│ │└─┘＂)

func AddActionButton(panel, text, action)
  var button = ui.AddButton()
  button.anchor = bottom_left
  button.dock = bottom_left
  button.y = button.y - 1
  button.x = button.x + 2

  button.text = text
  button.h = 3
  button.w = string.Size(text)+2
  button.SetPressed(action)

  return button

var BUTTON_ACTIONS = [
^  [0, ["††",  gameEngine.AACEnabled,               gameEngine._AACToggle]],
^  [0, ["††☆", gameEngine.AACFastEnabled,           gameEngine._AACFastToggle]],
^  [0, ["☺",   gameEngine.CustomStonescriptEnabled, gameEngine._CustomStonescriptToggle]],
^]

func init()
  PANEL = ui.AddPanel()
  PANEL.style = STYLE_LINED_BOX
  PANEL.anchor = bottom_left
  PANEL.dock = bottom_left
  PANEL.h = 3
  PANEL.y = PANEL.y - 1
  PANEL.x = PANEL.x + 1

  // create & add all buttons with their actions
  for action : BUTTON_ACTIONS
    var button = AddActionButton(PANEL, action[1][0], action[1][2])
    BUTTONS.Add(button)
  // space out the buttons evenly
  for i = 1 .. BUTTONS.Count() - 1
    BUTTONS[i].x = BUTTONS[i - 1].x + BUTTONS[i - 1].w

  var totalWidth = BUTTONS[BUTTONS.Count() - 1].x + BUTTONS[BUTTONS.Count() - 1].w

  PANEL.w = totalWidth

func render()
  // only create the buttons once
  ?loc.begin | loc.loop
    init()
    return

  // update all button states each frame
  for i = 0 .. BUTTONS.Count() - 1
    ?BUTTON_ACTIONS[i][1][1]()
      BUTTONS[i].bcolor = #green
    :
      BUTTONS[i].bcolor = #red