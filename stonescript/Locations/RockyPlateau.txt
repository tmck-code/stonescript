var log = import SS/Log
var strats = import SS/Strats

func ShouldUseElement(element, element_weapon_choice)
  // check if foe is immune
  ?foe.buffs.string = element | foe = element
    // then check if foe is _not_ immune to the weapon choice
    ?foe.buffs.string ! element_weapon_choice & foe ! element_weapon_choice
      >`0,25,#yellow,foe is immune to @element@ but not @element_weapon_choice@
      return true
  >`0,25,#red,foe is immune to @element@ and @element_weapon_choice@
  return false

func Rocky()
  log.LogStrat(4, "Rocky", "#green")

  ?foe ! boss | foe.distance > 10
    equipL tri // shovel
    equipR star
    return

  ?foe = phase3
    ?strats.MaskOfTheLost()
      return true

  ?ShouldUseElement("aether", "vigor")
    equipR vigor sword
    ?strats.UseWandAbility("reset", "L")
      return true
    equipL vigor wand
    return true
  :?ShouldUseElement("fire", "aether")
    equipR aether sword
    ?strats.UseWandAbility("calamity", "L")
      return true
    equipL aether wand
    return true
  :?ShouldUseElement("ice", "fire")
    equipR fire sword
    ?strats.UseWandAbility("explosion", "L")
      return true
    equipL fire wand
    return true
  :?ShouldUseElement("poison", "ice")
    equipR ice sword
    ?strats.UseWandAbility("frost", "L")
      return true
    equipL ice hammer
    return true
  :?ShouldUseElement("vigor", "poison")
    equipR poison sword +8
    ?strats.UseWandAbility("plague", "L")
      return true
    equipL poison wand
    return true

  equip heavy hammer
  strats.UseWeaponIfReady("heavy_hammer", 12)

?loc = rocky
  Rocky()
