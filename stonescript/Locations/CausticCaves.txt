var log = import SS/Log
var strats = import SS/Strats
var canUse = import SS/Checks/CanUse

var buffs = import SS/Checks/Buffs
var MAX_DISTANCE = 10
var MIN_DISTANCE = 3

var IS_FINAL_BOSS_STAGE = false
var BOSS_TIME = 0
?loc.loop = true
  IS_FINAL_BOSS_STAGE = false
  BOSS_TIME = 0

// >`0,10,#white,BOSS_TIME @IS_FINAL_BOSS_STAGE@ @BOSS_TIME@

var foeState = 0

func Caves()
  log.LogStrat(4, "Caves "+loc.stars+"â˜†", "#green")

  ?strats.canUseBladeDS(2)
    strats.useBladeDS()

  ?foe = spider_boss
    IS_FINAL_BOSS_STAGE = true

  ?IS_FINAL_BOSS_STAGE
    BOSS_TIME = BOSS_TIME + 1
    ?BOSS_TIME > 400 & foe.hp > 0
      ?strats.MaskOfTheLost()
        return
      ?strats.UseWandAbility("explosive", "L")
        return
      ?strats.UseWandAbility("plague", "R")
        return
      ?buffs.GetFoeBuffLevel("damage") >= 2
        ?strats.UseWandAbility("reset", "R")
          return

    equip ice crossbow
    return
    ?buffs.GetFoeDebuffLevel("chill") >= 2
      equip ice crossbow
      return
    :
      equipR ice wand
      equipL fire wand +11 df
      return

  ?strats._Speedy(22, true)
    return

  ?foe.count > 8
    ?armor > 14
      ?strats.UseWandAbility("calamity", "L")
        return

  // ?foe.distance >= MAX_DISTANCE | foe.hp > 80 | foe = tiny_spider
  ?foe.distance > 12 | foe.hp > 80
    equip ice crossbow
    return

  ?foe.distance >= MIN_DISTANCE
    equipL ice wand
    equipR tri
    return

  equipL ice hammer
  equipR vigor sword

?loc = caves
  Caves()
