// this is a struct that stores the time taken to complete each level,
// storing the time every 1 second (30 frames)
//
// it has helper funtions to serialise and deserialise the data to storage
// so that previous times can be compared

// stores each N frames, and the x position of the player
var positionsByFrame = []
// stores each x position of the player, and the N frames taken to reach that position
var framesByPosition = []

var currX = 0
var currFrame = 0


func Init()
  // this is the main function that is called when the script is loaded
  // it sets up the arrays and the storage for the time taken
  framesByPosition.Clear()
  positionsByFrame.Clear()
  currX = 0
  currFrame = 0

// this is the main public function that can be called to update the time
// stores:
// every n frames: (frames taken , x position of the player), and
// every 1 xPos:   (x position of the player, time taken)
func Update()
  // if we should be updating (as per total frame N / time)
  ?(totaltime % FRAMES_PER_SECOND) % 2 = 0
    positionsByFrame.Add([math.BigNumber(totaltime).ToFloat(), math.BigNumber(pos.x).ToFloat()])

  ?pos.x > currX
    currX = math.BigNumber(pos.x).ToFloat()
    framesByPosition.Add([currX, math.BigNumber(totaltime).ToFloat()])

  // // if we have just looped around (started at 0 again), then
  // // store the current struct and print a summary
  // ?!(loc.loop)
  //   return

  // // check if the arrays are empty
  // ?frameNArray.Count() = 0 & xPosArray.Count() = 0
  //   return
  
  // totalFrames = frameNArray[frameNArray.Count()-1]
  // totalX = xPosArray[xPosArray.Count()-1]

  // // storage.Set(string.Format("{0}_{1}", loc.id, "frames"), string.Join(",", frameNArray))
  // // storage.Set(string.Format("{0}_{1}", loc.id, "xpos"),   string.Join(",", xPosArray))

  // // clear & initialise the arrays
  // prevFrameNArray.Clear()
  // for frameN : frameNArray
  //   prevFrameNArray.Add(frameN)

  // prevXPosArray.Clear()
  // for xPos : xPosArray
  //   prevXPosArray.Add(xPos)

  // // finally, empty the arrays
  // frameNArray.Clear()
  // xPosArray.Clear()
